BEGIN(HEADER)
    PROPERTY(INT "textures[0]" 0)
    PROPERTY(INT "textures[1]" 1)
END(HEADER)

BEGIN(PASS)
    SET(ITERATION ONCE)

    SET(ATTRIBUTE POSITION "vertex_position")
    SET(ATTRIBUTE TEXCOORD0 "texture_coord0")
    SET(ATTRIBUTE TEXCOORD1 "texture_coord1")
    SET(ATTRIBUTE DIFFUSE "vertex_diffuse")

    SET(UNIFORM MODELVIEW_PROJECTION_MATRIX "modelview_projection")
    SET(UNIFORM TEXTURE_MATRIX0 "texture_matrix[0]")
    SET(UNIFORM TEXTURE_MATRIX1 "texture_matrix[1]")
    SET(UNIFORM ACTIVE_TEXTURE_UNITS "active_texture_count")
    SET(UNIFORM POINT_SIZE "point_size")
    SET(UNIFORM LIGHT_GLOBAL_AMBIENT "global_ambient")

    BEGIN_DATA(VERTEX)
        #version 120
        attribute vec3 vertex_position;
        attribute vec2 texture_coord0;
        attribute vec2 texture_coord1;
        attribute vec4 vertex_diffuse;

        uniform mat4 modelview_projection;
        uniform mat4 texture_matrix[2];
        uniform float point_size;

        varying vec2 frag_texcoord0;
        varying vec2 frag_texcoord1;
        varying vec4 frag_diffuse;

        void main() {
            frag_texcoord0 = (texture_matrix[0] * vec4(texture_coord0, 0, 1)).st;
            frag_texcoord1 = (texture_matrix[1] * vec4(texture_coord1, 0, 1)).st;
            frag_diffuse = vertex_diffuse;

            gl_Position = (modelview_projection * vec4(vertex_position, 1.0));
            gl_PointSize = point_size;
        }
    END_DATA(VERTEX)

    BEGIN_DATA(FRAGMENT)
        #version 120

        uniform sampler2D textures[2];
        uniform int active_texture_count;
        uniform vec4 global_ambient;

        varying vec2 frag_texcoord0;
        varying vec2 frag_texcoord1;
        varying vec4 frag_diffuse;

        void main() {
            if(active_texture_count == 0) {
                gl_FragColor = frag_diffuse;
            } else {
                vec4 t1 = texture2D(textures[0], frag_texcoord0.st);
                vec4 t2 = vec4(1.0, 1.0, 1.0, 1.0);
                if(active_texture_count > 1) {
                    t2 = texture2D(textures[1], frag_texcoord1.st);
                }
                gl_FragColor = ((t1 * global_ambient) + (t2 * global_ambient)) * frag_diffuse;
            }
        }
    END_DATA(FRAGMENT)
END(PASS)

